{"ast":null,"code":"import _objectWithoutProperties from \"/Users/austincurtis/Git/react-tutorials/react-router/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/austincurtis/Git/react-tutorials/react-router/src/components/ScrollToTopRoute.js\";\n\nconst React = require('react');\n\nconst _require = require('react'),\n      Component = _require.Component;\n\nconst PropTypes = require('prop-types');\n\nconst _require2 = require('react-router-dom'),\n      Route = _require2.Route,\n      withRouter = _require2.withRouter;\n\nclass ScrollToTopRoute extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          Component = _this$props.component,\n          RouteKey = _this$props.RouteKey,\n          location = _this$props.location,\n          rest = _objectWithoutProperties(_this$props, [\"component\", \"RouteKey\", \"location\"]);\n    /**\n     * Sometimes we need to force a React Route to re-render when the\n     * search params (query) in the url changes. React Router does not\n     * do this automatically if you are on the same page when the query\n     * changes. By passing the `RouteKey`ro the `ScrollToTopRoute` and\n     * setting it to true, we are passing the combination of pathname and\n     * search params as a unique key to the component and that is a enough\n     * and clear trigger for the component to re-render without side effects\n     */\n\n\n    const Key = RouteKey ? location.pathname + location.search : null;\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: props => React.createElement(Component, Object.assign({}, props, {\n        key: Key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nScrollToTopRoute.propTypes = {\n  path: PropTypes.string,\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  }),\n  component: PropTypes.instanceOf(Component),\n  RouteKey: PropTypes.boolean\n};\nexport default ScrollToTopRoute;","map":{"version":3,"sources":["/Users/austincurtis/Git/react-tutorials/react-router/src/components/ScrollToTopRoute.js"],"names":["React","require","Component","PropTypes","Route","withRouter","ScrollToTopRoute","componentDidUpdate","prevProps","props","location","pathname","window","scrollTo","render","component","RouteKey","rest","Key","search","propTypes","path","string","shape","instanceOf","boolean"],"mappings":";;;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;iBACsBA,OAAO,CAAC,OAAD,C;MAArBC,S,YAAAA,S;;AACR,MAAMC,SAAS,GAAGF,OAAO,CAAC,YAAD,CAAzB;;kBAC8BA,OAAO,CAAC,kBAAD,C;MAA7BG,K,aAAAA,K;MAAOC,U,aAAAA,U;;AAEf,MAAMC,gBAAN,SAA+BJ,SAA/B,CAAyC;AAErCK,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAApB,KAAiCH,SAAS,CAACE,QAAV,CAAmBC,QAAxD,EAAkE;AAC9DC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACyD,KAAKL,KAD9D;AAAA,UACcP,SADd,eACGa,SADH;AAAA,UACyBC,QADzB,eACyBA,QADzB;AAAA,UACmCN,QADnC,eACmCA,QADnC;AAAA,UACgDO,IADhD;AAGX;;;;;;;;;;;AASM,UAAMC,GAAG,GAAGF,QAAQ,GAAGN,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACS,MAAhC,GAAyC,IAA7D;AAEA,WAAO,oBAAC,KAAD,oBAAWF,IAAX;AAAiB,MAAA,MAAM,EAAER,KAAK,IAAK,oBAAC,SAAD,oBAAeA,KAAf;AAAsB,QAAA,GAAG,EAAES,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH;;AAvBoC;;AA0BzCZ,gBAAgB,CAACc,SAAjB,GAA6B;AACzBC,EAAAA,IAAI,EAAElB,SAAS,CAACmB,MADS;AAEzBZ,EAAAA,QAAQ,EAAEP,SAAS,CAACoB,KAAV,CAAgB;AACtBZ,IAAAA,QAAQ,EAAER,SAAS,CAACmB;AADE,GAAhB,CAFe;AAKzBP,EAAAA,SAAS,EAAEZ,SAAS,CAACqB,UAAV,CAAqBtB,SAArB,CALc;AAMzBc,EAAAA,QAAQ,EAAEb,SAAS,CAACsB;AANK,CAA7B;AASA,eAAenB,gBAAf","sourcesContent":["const React = require('react');\nconst { Component } = require('react');\nconst PropTypes = require('prop-types');\nconst { Route, withRouter } = require('react-router-dom');\n\nclass ScrollToTopRoute extends Component {\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0);\n        }\n    }\n\n    render() {\n        const { component: Component, RouteKey, location, ...rest } = this.props;\n\n\t\t/**\n\t\t * Sometimes we need to force a React Route to re-render when the\n\t\t * search params (query) in the url changes. React Router does not\n\t\t * do this automatically if you are on the same page when the query\n\t\t * changes. By passing the `RouteKey`ro the `ScrollToTopRoute` and\n\t\t * setting it to true, we are passing the combination of pathname and\n\t\t * search params as a unique key to the component and that is a enough\n\t\t * and clear trigger for the component to re-render without side effects\n\t\t */\n        const Key = RouteKey ? location.pathname + location.search : null;\n\n        return <Route {...rest} render={props => (<Component {...props} key={Key} />)} />;\n    }\n}\n\nScrollToTopRoute.propTypes = {\n    path: PropTypes.string,\n    location: PropTypes.shape({\n        pathname: PropTypes.string,\n    }),\n    component: PropTypes.instanceOf(Component),\n    RouteKey: PropTypes.boolean,\n};\n\nexport default ScrollToTopRoute;"]},"metadata":{},"sourceType":"module"}